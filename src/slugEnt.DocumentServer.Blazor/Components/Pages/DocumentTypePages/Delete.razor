@page "/documenttypes/delete"
@using Microsoft.EntityFrameworkCore
@using SlugEnt.DocumentServer.Models.Entities
@using SlugEnt.DocumentServer.Db
@inject NavigationManager NavigationManager
@inject DocServerDbContext DB

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>DocumentType</h4>
    <hr/>
    @if (documenttype is null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@documenttype.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@documenttype.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StorageFolderName</dt>
            <dd class="col-sm-10">@documenttype.StorageFolderName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StorageMode</dt>
            <dd class="col-sm-10">@documenttype.StorageMode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">InActiveLifeTime</dt>
            <dd class="col-sm-10">@documenttype.InActiveLifeTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RootObjectId</dt>
            <dd class="col-sm-10">@documenttype.RootObjectId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AllowSameDTEKeys</dt>
            <dd class="col-sm-10">@documenttype.AllowSameDTEKeys</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ActiveStorageNode1Id</dt>
            <dd class="col-sm-10">@documenttype.ActiveStorageNode1Id</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ActiveStorageNode2Id</dt>
            <dd class="col-sm-10">@documenttype.ActiveStorageNode2Id</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArchivalStorageNode1Id</dt>
            <dd class="col-sm-10">@documenttype.ArchivalStorageNode1Id</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArchivalStorageNode2Id</dt>
            <dd class="col-sm-10">@documenttype.ArchivalStorageNode2Id</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedAtUTC</dt>
            <dd class="col-sm-10">@documenttype.CreatedAtUTC</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ModifiedAtUTC</dt>
            <dd class="col-sm-10">@documenttype.ModifiedAtUTC</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@documenttype.IsActive</dd>
        </dl>
        <EditForm method="post" Model="documenttype" OnValidSubmit="DeleteDocumentType" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(documenttype is null)">Delete</button> |
            <a href="/documenttypes">Back to List</a>
        </EditForm>
    }
</div>

@code {
    DocumentType? documenttype;

    [SupplyParameterFromQuery] public int Id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        documenttype = await DB.DocumentTypes.FirstOrDefaultAsync(m => m.Id == Id);

        if (documenttype is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }


    public async Task DeleteDocumentType()
    {
        DB.DocumentTypes.Remove(documenttype!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/documenttypes");
    }


}